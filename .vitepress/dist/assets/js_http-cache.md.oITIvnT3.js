import{$ as i,S as s,W as e,aF as l}from"./chunks/framework.B4ByH7pa.js";const k=JSON.parse('{"title":"HTTP缓存","description":"","frontmatter":{},"headers":[],"relativePath":"js/http-cache.md","filePath":"js/http-cache.md","lastUpdated":1747556240000}'),t={name:"js/http-cache.md"};function n(h,a,o,p,d,c){return e(),s("div",null,a[0]||(a[0]=[l(`<h1 id="http缓存" tabindex="-1">HTTP缓存 <a class="header-anchor" href="#http缓存" aria-label="Permalink to &quot;HTTP缓存&quot;">​</a></h1><h2 id="什么是http缓存" tabindex="-1">什么是HTTP缓存？ <a class="header-anchor" href="#什么是http缓存" aria-label="Permalink to &quot;什么是HTTP缓存？&quot;">​</a></h2><p>HTTP缓存是一种在客户端或服务器端存储HTTP响应数据的技术，用于减少重复请求，提高网站性能。当用户再次访问相同资源时，可以直接使用缓存的数据，而不需要重新从服务器获取。</p><h2 id="缓存位置" tabindex="-1">缓存位置 <a class="header-anchor" href="#缓存位置" aria-label="Permalink to &quot;缓存位置&quot;">​</a></h2><ol><li><p><strong>浏览器缓存</strong></p><ul><li>内存缓存（Memory Cache）</li><li>硬盘缓存（Disk Cache）</li></ul></li><li><p><strong>代理服务器缓存</strong></p><ul><li>CDN缓存</li><li>反向代理缓存</li></ul></li></ol><h2 id="缓存策略" tabindex="-1">缓存策略 <a class="header-anchor" href="#缓存策略" aria-label="Permalink to &quot;缓存策略&quot;">​</a></h2><h3 id="_1-强缓存" tabindex="-1">1. 强缓存 <a class="header-anchor" href="#_1-强缓存" aria-label="Permalink to &quot;1. 强缓存&quot;">​</a></h3><p>强缓存不需要向服务器发送请求，直接使用本地缓存。</p><p>相关响应头：</p><ul><li><code>Expires</code>：过期时间（HTTP/1.0）</li><li><code>Cache-Control</code>：缓存控制（HTTP/1.1）</li></ul><div class="language-http vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">http</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Cache-Control</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> max-age=31536000</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Expires</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Wed, 21 Oct 2024 07:28:00 GMT</span></span></code></pre></div><h3 id="_2-协商缓存" tabindex="-1">2. 协商缓存 <a class="header-anchor" href="#_2-协商缓存" aria-label="Permalink to &quot;2. 协商缓存&quot;">​</a></h3><p>协商缓存需要向服务器发送请求，服务器判断资源是否可用。</p><p>相关响应头：</p><ul><li><code>Last-Modified</code> / <code>If-Modified-Since</code>：基于文件修改时间</li><li><code>ETag</code> / <code>If-None-Match</code>：基于文件内容</li></ul><div class="language-http vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">http</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Last-Modified</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Wed, 21 Oct 2023 07:28:00 GMT</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">ETag</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;33a64df551425fcc55e4d42a148795d9f25f89d4&quot;</span></span></code></pre></div><h2 id="cache-control-指令" tabindex="-1">Cache-Control 指令 <a class="header-anchor" href="#cache-control-指令" aria-label="Permalink to &quot;Cache-Control 指令&quot;">​</a></h2><h3 id="可缓存性" tabindex="-1">可缓存性 <a class="header-anchor" href="#可缓存性" aria-label="Permalink to &quot;可缓存性&quot;">​</a></h3><ul><li><code>public</code>：响应可以被任何对象缓存</li><li><code>private</code>：响应只能被单个用户缓存</li><li><code>no-cache</code>：需要向服务器验证缓存是否可用</li><li><code>no-store</code>：不缓存响应</li></ul><h3 id="过期时间" tabindex="-1">过期时间 <a class="header-anchor" href="#过期时间" aria-label="Permalink to &quot;过期时间&quot;">​</a></h3><ul><li><code>max-age=&lt;seconds&gt;</code>：设置缓存存储的最大周期</li><li><code>s-maxage=&lt;seconds&gt;</code>：覆盖max-age，仅用于共享缓存</li><li><code>max-stale=&lt;seconds&gt;</code>：客户端愿意接受的最大过期时间</li></ul><h3 id="重新验证" tabindex="-1">重新验证 <a class="header-anchor" href="#重新验证" aria-label="Permalink to &quot;重新验证&quot;">​</a></h3><ul><li><code>must-revalidate</code>：过期后必须向服务器验证</li><li><code>proxy-revalidate</code>：要求中间缓存服务器验证</li></ul><h2 id="缓存流程" tabindex="-1">缓存流程 <a class="header-anchor" href="#缓存流程" aria-label="Permalink to &quot;缓存流程&quot;">​</a></h2><ol><li><p><strong>首次请求</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>浏览器 -&gt; 服务器：请求资源</span></span>
<span class="line"><span>服务器 -&gt; 浏览器：返回资源 + 缓存策略</span></span></code></pre></div></li><li><p><strong>再次请求（强缓存）</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>浏览器：检查本地缓存是否过期</span></span>
<span class="line"><span>未过期：直接使用缓存</span></span>
<span class="line"><span>已过期：进入协商缓存</span></span></code></pre></div></li><li><p><strong>协商缓存</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>浏览器 -&gt; 服务器：发送If-Modified-Since/If-None-Match</span></span>
<span class="line"><span>服务器：检查资源是否更新</span></span>
<span class="line"><span>未更新：返回304 Not Modified</span></span>
<span class="line"><span>已更新：返回新资源</span></span></code></pre></div></li></ol><h2 id="最佳实践" tabindex="-1">最佳实践 <a class="header-anchor" href="#最佳实践" aria-label="Permalink to &quot;最佳实践&quot;">​</a></h2><h3 id="_1-静态资源缓存策略" tabindex="-1">1. 静态资源缓存策略 <a class="header-anchor" href="#_1-静态资源缓存策略" aria-label="Permalink to &quot;1. 静态资源缓存策略&quot;">​</a></h3><div class="language-http vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">http</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># HTML文件</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Cache-Control</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> no-cache</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># CSS/JS文件</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Cache-Control</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> max-age=31536000</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 图片等媒体文件</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Cache-Control</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> max-age=31536000</span></span></code></pre></div><h3 id="_2-动态资源缓存策略" tabindex="-1">2. 动态资源缓存策略 <a class="header-anchor" href="#_2-动态资源缓存策略" aria-label="Permalink to &quot;2. 动态资源缓存策略&quot;">​</a></h3><div class="language-http vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">http</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># API响应</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Cache-Control</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> no-store, no-cache, must-revalidate</span></span></code></pre></div><h3 id="_3-缓存更新策略" tabindex="-1">3. 缓存更新策略 <a class="header-anchor" href="#_3-缓存更新策略" aria-label="Permalink to &quot;3. 缓存更新策略&quot;">​</a></h3><ol><li>文件名添加版本号或哈希值</li><li>使用Service Worker进行缓存控制</li><li>合理设置缓存时间</li></ol><h2 id="常见问题" tabindex="-1">常见问题 <a class="header-anchor" href="#常见问题" aria-label="Permalink to &quot;常见问题&quot;">​</a></h2><h3 id="_1-缓存穿透" tabindex="-1">1. 缓存穿透 <a class="header-anchor" href="#_1-缓存穿透" aria-label="Permalink to &quot;1. 缓存穿透&quot;">​</a></h3><ul><li>问题：请求不存在的数据，导致缓存失效</li><li>解决：使用布隆过滤器或缓存空值</li></ul><h3 id="_2-缓存击穿" tabindex="-1">2. 缓存击穿 <a class="header-anchor" href="#_2-缓存击穿" aria-label="Permalink to &quot;2. 缓存击穿&quot;">​</a></h3><ul><li>问题：热点数据过期，导致大量请求直接访问数据库</li><li>解决：使用互斥锁或永不过期策略</li></ul><h3 id="_3-缓存雪崩" tabindex="-1">3. 缓存雪崩 <a class="header-anchor" href="#_3-缓存雪崩" aria-label="Permalink to &quot;3. 缓存雪崩&quot;">​</a></h3><ul><li>问题：大量缓存同时过期</li><li>解决：设置随机过期时间</li></ul><h2 id="调试工具" tabindex="-1">调试工具 <a class="header-anchor" href="#调试工具" aria-label="Permalink to &quot;调试工具&quot;">​</a></h2><ol><li><p>Chrome DevTools</p><ul><li>Network面板</li><li>Application面板</li></ul></li><li><p>命令行工具</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -I</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://example.com</span></span></code></pre></div></li></ol><h2 id="性能优化建议" tabindex="-1">性能优化建议 <a class="header-anchor" href="#性能优化建议" aria-label="Permalink to &quot;性能优化建议&quot;">​</a></h2><ol><li>合理设置缓存策略</li><li>使用CDN加速</li><li>实现资源版本控制</li><li>监控缓存命中率</li><li>定期清理过期缓存</li></ol>`,43)]))}const u=i(t,[["render",n]]);export{k as __pageData,u as default};
